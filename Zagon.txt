ZA ZAGON JE POTREBNO ZAGNATI: Predict_service.py v datoteki src/serve, kar predstavlja naš backend. 
Za client je pa potrebno zagnati App.js v datoteki src/client/src. 
Vse potrebne knjižnice so zgoraj navedene, kot tudi v svojih requirements.txt in package.json datotekah za lažjo inštalacijo.
Deluje na vseh verzijak python 3.9.x. Na novih verzijah se knjižnjice "tepejo";
Lahko pa tudi spodaj navedene linke odpremo, ampak se render vsake 15 minut ugasne in potem ne dela.


Lahko pa tudi prenesmo docker conteinerje, seveda potem nimamo repositorija (kode) pri sebi.
Docker: 1. cesi212314/project_client
        2. cesi212314/project_service



Za lokalno namestitev je potrebno imeti Python za servis ter Node za klienta.

python:
pip install \
    scikit-learn==0.24.2 \
    random \
    re \
    flask==2.0.2 \
    pandas==1.3.3 \
    numpy==1.21.2 \
    pymongo==3.12.0 \
    joblib==1.1.0 \
    flask-cors==3.0.10 \
    onnxruntime==1.9.0 \
    mlflow==1.21.0 \
    dagshub==0.1.0 \
    dvc==2.9.3 \
    dvc[s3]==2.9.3 \
    requests==2.26.0 \
    evidently==0.1.43.dev0 \
    great_expectations==0.13.37

node:
npm install \
    @babel/core@7.16.0 \
    @babel/plugin-proposal-class-properties@7.16.0 \
    @babel/plugin-proposal-decorators@7.16.0 \
    @babel/preset-env@7.16.0 \
    @testing-library/jest-dom@5.15.0 \
    @testing-library/react@11.2.7 \
    @testing-library/user-event@12.8.3 \
    @types/jest@26.0.23 \
    @types/node@12.20.28 \
    @types/react@17.0.37 \
    @types/react-dom@17.0.11 \
    axios@0.21.4 \
    chart.js@3.7.0 \
    d3@7.0.0 \
    react@17.0.2 \
    react-chartjs-2@4.0.1 \
    react-dom@17.0.2 \
    react-router-dom@5.2.0 \
    react-scripts@4.0.3 \
    react-three-fiber@7.0.16 \
    three@0.131.3



Linki do strani (servis in klient):

Servis: https://project-service-latest.onrender.com (ni potrebno odpreti)
Klient: https://project-client-latest.onrender.com
